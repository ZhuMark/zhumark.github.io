<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>使用Google服务跑机器学习</title>
      <link href="/2018/04/19/%E4%BD%BF%E7%94%A8Google%E6%9C%8D%E5%8A%A1%E8%B7%91%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/04/19/%E4%BD%BF%E7%94%A8Google%E6%9C%8D%E5%8A%A1%E8%B7%91%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>机器学习项目运行时间比较长，跑起来非常耗费电脑资源，使用CPU基本是龟速前进。比较好的方法是使用GPU进行加速，然而GPU服务器，无论按小时计费还是按秒计费都非常贵，毕竟资源有限。最近发现，Google拥有一项免费云端机器学习服务，使用的GPU为Tesla K80，效果还是很不错的。</p><a id="more"></a><p>这项服务就是Google Colab，全名Colaboratory，类似于一个远端的jupyter notebook。你可以用它来提高Python技能，也可以用Keras、TensorFlow、PyTorch、OpenCV等等流行的深度学习库来练练手，开发深度学习应用。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="必须拥有的东西"><a href="#必须拥有的东西" class="headerlink" title="必须拥有的东西"></a>必须拥有的东西</h3><ul><li>梯子，保证能访问“外网”</li><li>Google账号，使用Google Drive存储文件和数据。</li></ul><h3 id="在Google-Drive上创建文件夹"><a href="#在Google-Drive上创建文件夹" class="headerlink" title="在Google Drive上创建文件夹"></a>在Google Drive上创建文件夹</h3><p>Colab用的数据都存储在Google Drive云端硬盘上，所以，我们需要先指定要在Google Drive上用的文件夹。</p><p>比如说，可以在Google Drive上创建一个“app”文件夹，或者其他什么名字，也可以选择Colab笔记本默认的文件夹。</p><h3 id="新建Colab笔记本"><a href="#新建Colab笔记本" class="headerlink" title="新建Colab笔记本"></a>新建Colab笔记本</h3><p>在刚刚创建的app文件夹里点击右键，选择“More”，然后从菜单里选择“Colaboratory”，这样就新建出了一个Colab笔记本。Colab笔记本使用非常方便，和jupyter notebook的使用一模一样。</p><h3 id="设置免费GPU"><a href="#设置免费GPU" class="headerlink" title="设置免费GPU"></a>设置免费GPU</h3><p>在笔记本里点Edit&gt;Notebook settings（编辑&gt;笔记本设置），或者Runtime&gt;Change runtime type（运行时&gt;改变运行时类型），然后在Hardware accelerator（硬件加速器）一栏选择GPU。</p><p>然后，就可以使用Google Colab愉快的玩耍了。</p><h2 id="运行基本Python代码"><a href="#运行基本Python代码" class="headerlink" title="运行基本Python代码"></a>运行基本Python代码</h2><p>因为默认已经装好了一些机器学习常用的框架，所以可以直接上手。试着在代码单元格中使用python代码，如使用numpy运算库等，运行结果如你所料。</p><h2 id="用Colab运行-py文件"><a href="#用Colab运行-py文件" class="headerlink" title="用Colab运行.py文件"></a>用Colab运行.py文件</h2><h3 id="Google-Drive授权"><a href="#Google-Drive授权" class="headerlink" title="Google Drive授权"></a>Google Drive授权</h3><p>先运行下面这些代码，来安装必要的库、执行授权。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">!apt-get install -y -qq software-properties-common python-software-properties module-init-tools</div><div class="line">!add-apt-repository -y ppa:alessandro-strada/ppa <span class="number">2</span>&gt;&amp;<span class="number">1</span> &gt; /dev/null</div><div class="line">!apt-get update -qq <span class="number">2</span>&gt;&amp;<span class="number">1</span> &gt; /dev/null</div><div class="line">!apt-get -y install -qq google-drive-ocamlfuse fuse</div><div class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> auth</div><div class="line">auth.authenticate_user()</div><div class="line"><span class="keyword">from</span> oauth2client.client <span class="keyword">import</span> GoogleCredentials</div><div class="line">creds = GoogleCredentials.get_application_default()</div><div class="line"><span class="keyword">import</span> getpass</div><div class="line">!google-drive-ocamlfuse -headless -id=&#123;creds.client_id&#125; -secret=&#123;creds.client_secret&#125; &lt; /dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span> | grep URL</div><div class="line">vcode = getpass.getpass()</div><div class="line">!echo &#123;vcode&#125; | google-drive-ocamlfuse -headless -id=&#123;creds.client_id&#125; -secret=&#123;creds.client_secret&#125;</div></pre></td></tr></table></figure><p>看见那个链接之后，点击它，复制验证码并粘贴到文本框里,确认后就可以看到授权成功的信息了。</p><p>授权完成后，就可以挂载Google Drive了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">!mkdir -p drive</div><div class="line">!google-drive-ocamlfuse drive</div></pre></td></tr></table></figure><p>每隔一段时间之后，colab给分配的环境会被自动初始化，下次进来得重新挂载google drive，以上代码几乎每次打开都得执行。</p><p>Colab 自带了 Tensorflow、Matplotlib、Numpy、Pandas 等深度学习基础库。如果还需要其他依赖，如 Keras，可以新建代码块，输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 安装最新版本Keras</span></div><div class="line"><span class="comment"># https://keras.io/</span></div><div class="line">!pip install keras</div><div class="line"><span class="comment"># 指定版本安装</span></div><div class="line">!pip install keras==<span class="number">2.0</span><span class="number">.9</span></div><div class="line"><span class="comment"># 安装 OpenCV</span></div><div class="line"><span class="comment"># https://opencv.org/</span></div><div class="line">!apt-get -qq install -y libsm6 libxext6 &amp;&amp; pip install -q -U opencv-python</div><div class="line"><span class="comment"># 安装 Pytorch</span></div><div class="line"><span class="comment"># http://pytorch.org/</span></div><div class="line">!pip install -q http://download.pytorch.org/whl/cu75/torch<span class="number">-0.2</span><span class="number">.0</span>.post3-cp27-cp27mu-manylinux1_x86_64.whl torchvision</div><div class="line"><span class="comment"># 安装 XGBoost</span></div><div class="line"><span class="comment"># https://github.com/dmlc/xgboost</span></div><div class="line">!pip install -q xgboost</div><div class="line"><span class="comment"># 安装 7Zip</span></div><div class="line">!apt-get -qq install -y libarchive-dev &amp;&amp; pip install -q -U libarchive</div><div class="line"><span class="comment"># 安装 GraphViz 和 PyDot</span></div><div class="line">!apt-get -qq install -y graphviz &amp;&amp; pip install -q pydot</div></pre></td></tr></table></figure><p>将mnist_cnn.py文件上传到位于Google云端硬盘上的应用文件夹：</p><p>运行下面的代码，用MNIST数据集训练一个简单的卷积神经网络：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!python3 drive/app/mnist_cnn.py</div></pre></td></tr></table></figure><p>从结果中可以看到，每个epoch只需要11秒。</p><h3 id="下载泰坦尼克数据集"><a href="#下载泰坦尼克数据集" class="headerlink" title="下载泰坦尼克数据集"></a>下载泰坦尼克数据集</h3><p>想按照链接下载.csv文件到app文件夹，只需运行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!wget https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/datasets/Titanic.csv -P drive/app</div></pre></td></tr></table></figure><p>也可以直接将.csv文件上传到app文件夹。</p><h2 id="一些小的代码片段"><a href="#一些小的代码片段" class="headerlink" title="一些小的代码片段"></a>一些小的代码片段</h2><p>在笔记本的左侧，打开三角形的指示器，在代码段目录下，你可以看到一些Google提供的小脚本，方便你的一些操作。</p><p>例如，你可以安装7zip reader</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">!apt-get -qq install -y libarchive-dev &amp;&amp; pip install -q -U libarchiv</div><div class="line"><span class="keyword">import</span> libarchive</div></pre></td></tr></table></figure><p>也可以保存数据到Google Drive</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Install the PyDrive wrapper &amp; import libraries.</span></div><div class="line"><span class="comment"># This only needs to be done once in a notebook.</span></div><div class="line">!pip install -U -q PyDrive</div><div class="line"><span class="keyword">from</span> pydrive.auth <span class="keyword">import</span> GoogleAuth</div><div class="line"><span class="keyword">from</span> pydrive.drive <span class="keyword">import</span> GoogleDrive</div><div class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> auth</div><div class="line"><span class="keyword">from</span> oauth2client.client <span class="keyword">import</span> GoogleCredentials</div><div class="line"></div><div class="line"><span class="comment"># Authenticate and create the PyDrive client.</span></div><div class="line"><span class="comment"># This only needs to be done once in a notebook.</span></div><div class="line">auth.authenticate_user()</div><div class="line">gauth = GoogleAuth()</div><div class="line">gauth.credentials = GoogleCredentials.get_application_default()</div><div class="line">drive = GoogleDrive(gauth)</div><div class="line"></div><div class="line"><span class="comment"># Create &amp; upload a text file.</span></div><div class="line">uploaded = drive.CreateFile(&#123;<span class="string">'title'</span>: <span class="string">'Sample file.txt'</span>&#125;)</div><div class="line">uploaded.SetContentString(<span class="string">'Sample upload file content'</span>)</div><div class="line">uploaded.Upload()</div><div class="line">print(<span class="string">'Uploaded file with ID &#123;&#125;'</span>.format(uploaded.get(<span class="string">'id'</span>)))</div></pre></td></tr></table></figure><p>要查看你在Colab里是不是真的在用GPU，可以运行以下代码来交叉检查：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</div><div class="line">tf.test.gpu_device_name()</div></pre></td></tr></table></figure><p>要想知道你在使用那块GPU，使用下面的代码即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> tensorflow.python.client <span class="keyword">import</span> device_lib</div><div class="line">device_lib.list_local_devices()</div></pre></td></tr></table></figure><p>按照输出结果来看，其实Colab只有一个CPU和一块Tesla K80的GPU，但这对我们开始足够了。</p><p>查看RAM和CPU信息：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">!cat /<span class="meta">proc</span>/meminfo</div><div class="line">!cat /<span class="meta">proc</span>/cpuinfo</div></pre></td></tr></table></figure><p>在colab环境中，我们挂载Google drive的位置是/content/drive/ 。colab中的notebook和py文件默认都是以/content/ 作为工作目录，如果我们要切换工作路径。需要执行一下命令手动切换工作目录，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line">path = <span class="string">"/content/drive/path/to/file(s)"</span></div><div class="line">os.chdir(path)</div><div class="line">os.list(path)</div></pre></td></tr></table></figure><p>遍历目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 列出根目录的所有文件</span></div><div class="line"><span class="comment"># "q" 查询条件教程详见：https://developers.google.com/drive/v2/web/search-parameters</span></div><div class="line">file_list = drive.ListFile(&#123;<span class="string">'q'</span>: <span class="string">"'root' in parents and trashed=false"</span>&#125;).GetList()</div><div class="line"><span class="keyword">for</span> file1 <span class="keyword">in</span> file_list:</div><div class="line">  print(<span class="string">'title: %s, id: %s, mimeType: %s'</span> % (file1[<span class="string">'title'</span>], file1[<span class="string">'id'</span>], file1[<span class="string">"mimeType"</span>]))</div></pre></td></tr></table></figure><p>我们看到的控制台打印结果中，其中的id是我们获取文件的唯一标识。</p><p>读取文件内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#for .txt file</span></div><div class="line">file = drive.CreateFile(&#123;<span class="string">'id'</span>: <span class="string">"替换成你的 .txt 文件 id"</span>&#125;) </div><div class="line">file.GetContentString()</div><div class="line"></div><div class="line"><span class="comment">#for .csv file</span></div><div class="line"><span class="comment">#GetContentString()只能打印第一行数据</span></div><div class="line">file = drive.CreateFile(&#123;<span class="string">'id'</span>: <span class="string">"替换成你的 .csv 文件 id"</span>&#125;) </div><div class="line"><span class="comment">#这里的下载操作只是缓存，不会在你的Google Drive 目录下多下载一个文件</span></div><div class="line">file.GetContentFile(<span class="string">'iris.csv'</span>, <span class="string">"text/csv"</span>) </div><div class="line"><span class="comment"># 直接打印文件内容</span></div><div class="line"><span class="keyword">with</span> open(<span class="string">'iris.csv'</span>) <span class="keyword">as</span> f:</div><div class="line">  <span class="keyword">print</span> f.readlines()</div><div class="line"><span class="comment"># 用 pandas 读取</span></div><div class="line"><span class="keyword">import</span> pandas</div><div class="line">pd.read_csv(<span class="string">'iris.csv'</span>, index_col=[<span class="number">0</span>,<span class="number">1</span>], skipinitialspace=<span class="keyword">True</span>)</div></pre></td></tr></table></figure><p>Colab 会直接以表格的形式输出结果</p><p>写文件操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 创建一个文本文件</span></div><div class="line">uploaded = drive.CreateFile(&#123;<span class="string">'title'</span>: <span class="string">'示例.txt'</span>&#125;)</div><div class="line">uploaded.SetContentString(<span class="string">'测试内容'</span>)</div><div class="line">uploaded.Upload()</div><div class="line">print(<span class="string">'创建后文件 id 为 &#123;&#125;'</span>.format(uploaded.get(<span class="string">'id'</span>)))</div></pre></td></tr></table></figure><p>下载文件到本地</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">with</span> open(<span class="string">'example.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</div><div class="line">  f.write(<span class="string">'测试内容'</span>)</div><div class="line">files.download(<span class="string">'example.txt'</span>)</div></pre></td></tr></table></figure><p>至此，所有的介绍完毕，请开始你的机器学习吧，事不宜迟，赶快动手试试看。至于实战什么的，试着试着就知道咯，欢迎入坑！</p><h3 id="参考文章链接"><a href="#参考文章链接" class="headerlink" title="参考文章链接"></a>参考文章链接</h3><p><a href="https://zhuanlan.zhihu.com/p/33344222" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/33344222</a></p><p><a href="https://segmentfault.com/a/1190000012731724" target="_blank" rel="external">https://segmentfault.com/a/1190000012731724</a></p>]]></content>
      
      <categories>
          
          <category> Machine Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
