{"meta":{"title":"Zhumark's Blog","subtitle":"","description":null,"author":"zhumark","url":"http://www.zhumark.cn"},"pages":[{"title":"About me","date":"2017-08-09T11:56:36.000Z","updated":"2018-04-19T07:33:08.180Z","comments":false,"path":"about/index.html","permalink":"http://www.zhumark.cn/about/index.html","excerpt":"","text":"自我介绍什么的还是算了吧，大概也不会有人关心。 以下是我的联系信息，想交流的话通过以下方式即可。 QQ: 1491579705Email: zhumarkwei@qq.comGithub: https://github.com/zhumark"},{"title":"Categories","date":"2017-08-09T12:02:31.000Z","updated":"2017-08-09T12:03:59.023Z","comments":false,"path":"categories/index.html","permalink":"http://www.zhumark.cn/categories/index.html","excerpt":"","text":""},{"title":"All tags","date":"2017-08-09T11:50:52.000Z","updated":"2017-08-09T11:52:09.767Z","comments":false,"path":"tags/index.html","permalink":"http://www.zhumark.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"使用Google服务跑机器学习","slug":"使用Google服务跑机器学习","date":"2018-04-18T16:14:01.278Z","updated":"2018-04-19T06:50:34.225Z","comments":true,"path":"2018/04/19/使用Google服务跑机器学习/","link":"","permalink":"http://www.zhumark.cn/2018/04/19/使用Google服务跑机器学习/","excerpt":"机器学习项目运行时间比较长，跑起来非常耗费电脑资源，使用CPU基本是龟速前进。比较好的方法是使用GPU进行加速，然而GPU服务器，无论按小时计费还是按秒计费都非常贵，毕竟资源有限。最近发现，Google拥有一项免费云端机器学习服务，使用的GPU为Tesla K80，效果还是很不错的。","text":"机器学习项目运行时间比较长，跑起来非常耗费电脑资源，使用CPU基本是龟速前进。比较好的方法是使用GPU进行加速，然而GPU服务器，无论按小时计费还是按秒计费都非常贵，毕竟资源有限。最近发现，Google拥有一项免费云端机器学习服务，使用的GPU为Tesla K80，效果还是很不错的。 这项服务就是Google Colab，全名Colaboratory，类似于一个远端的jupyter notebook。你可以用它来提高Python技能，也可以用Keras、TensorFlow、PyTorch、OpenCV等等流行的深度学习库来练练手，开发深度学习应用。 准备工作必须拥有的东西 梯子，保证能访问“外网” Google账号，使用Google Drive存储文件和数据。 在Google Drive上创建文件夹Colab用的数据都存储在Google Drive云端硬盘上，所以，我们需要先指定要在Google Drive上用的文件夹。 比如说，可以在Google Drive上创建一个“app”文件夹，或者其他什么名字，也可以选择Colab笔记本默认的文件夹。 新建Colab笔记本在刚刚创建的app文件夹里点击右键，选择“More”，然后从菜单里选择“Colaboratory”，这样就新建出了一个Colab笔记本。Colab笔记本使用非常方便，和jupyter notebook的使用一模一样。 设置免费GPU在笔记本里点Edit&gt;Notebook settings（编辑&gt;笔记本设置），或者Runtime&gt;Change runtime type（运行时&gt;改变运行时类型），然后在Hardware accelerator（硬件加速器）一栏选择GPU。 然后，就可以使用Google Colab愉快的玩耍了。 运行基本Python代码因为默认已经装好了一些机器学习常用的框架，所以可以直接上手。试着在代码单元格中使用python代码，如使用numpy运算库等，运行结果如你所料。 用Colab运行.py文件Google Drive授权先运行下面这些代码，来安装必要的库、执行授权。 123456789101112!apt-get install -y -qq software-properties-common python-software-properties module-init-tools!add-apt-repository -y ppa:alessandro-strada/ppa 2&gt;&amp;1 &gt; /dev/null!apt-get update -qq 2&gt;&amp;1 &gt; /dev/null!apt-get -y install -qq google-drive-ocamlfuse fusefrom google.colab import authauth.authenticate_user()from oauth2client.client import GoogleCredentialscreds = GoogleCredentials.get_application_default()import getpass!google-drive-ocamlfuse -headless -id=&#123;creds.client_id&#125; -secret=&#123;creds.client_secret&#125; &lt; /dev/null 2&gt;&amp;1 | grep URLvcode = getpass.getpass()!echo &#123;vcode&#125; | google-drive-ocamlfuse -headless -id=&#123;creds.client_id&#125; -secret=&#123;creds.client_secret&#125; 看见那个链接之后，点击它，复制验证码并粘贴到文本框里,确认后就可以看到授权成功的信息了。 授权完成后，就可以挂载Google Drive了： 12!mkdir -p drive!google-drive-ocamlfuse drive 每隔一段时间之后，colab给分配的环境会被自动初始化，下次进来得重新挂载google drive，以上代码几乎每次打开都得执行。 Colab 自带了 Tensorflow、Matplotlib、Numpy、Pandas 等深度学习基础库。如果还需要其他依赖，如 Keras，可以新建代码块，输入 123456789101112131415161718# 安装最新版本Keras# https://keras.io/!pip install keras# 指定版本安装!pip install keras==2.0.9# 安装 OpenCV# https://opencv.org/!apt-get -qq install -y libsm6 libxext6 &amp;&amp; pip install -q -U opencv-python# 安装 Pytorch# http://pytorch.org/!pip install -q http://download.pytorch.org/whl/cu75/torch-0.2.0.post3-cp27-cp27mu-manylinux1_x86_64.whl torchvision# 安装 XGBoost# https://github.com/dmlc/xgboost!pip install -q xgboost# 安装 7Zip!apt-get -qq install -y libarchive-dev &amp;&amp; pip install -q -U libarchive# 安装 GraphViz 和 PyDot!apt-get -qq install -y graphviz &amp;&amp; pip install -q pydot 将mnist_cnn.py文件上传到位于Google云端硬盘上的应用文件夹： 运行下面的代码，用MNIST数据集训练一个简单的卷积神经网络： 1!python3 drive/app/mnist_cnn.py 从结果中可以看到，每个epoch只需要11秒。 下载泰坦尼克数据集想按照链接下载.csv文件到app文件夹，只需运行： 1!wget https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/datasets/Titanic.csv -P drive/app 也可以直接将.csv文件上传到app文件夹。 一些小的代码片段在笔记本的左侧，打开三角形的指示器，在代码段目录下，你可以看到一些Google提供的小脚本，方便你的一些操作。 例如，你可以安装7zip reader 12!apt-get -qq install -y libarchive-dev &amp;&amp; pip install -q -U libarchivimport libarchive 也可以保存数据到Google Drive 1234567891011121314151617181920# Install the PyDrive wrapper &amp; import libraries.# This only needs to be done once in a notebook.!pip install -U -q PyDrivefrom pydrive.auth import GoogleAuthfrom pydrive.drive import GoogleDrivefrom google.colab import authfrom oauth2client.client import GoogleCredentials# Authenticate and create the PyDrive client.# This only needs to be done once in a notebook.auth.authenticate_user()gauth = GoogleAuth()gauth.credentials = GoogleCredentials.get_application_default()drive = GoogleDrive(gauth)# Create &amp; upload a text file.uploaded = drive.CreateFile(&#123;'title': 'Sample file.txt'&#125;)uploaded.SetContentString('Sample upload file content')uploaded.Upload()print('Uploaded file with ID &#123;&#125;'.format(uploaded.get('id'))) 要查看你在Colab里是不是真的在用GPU，可以运行以下代码来交叉检查： 12import tensorflow as tftf.test.gpu_device_name() 要想知道你在使用那块GPU，使用下面的代码即可： 12from tensorflow.python.client import device_libdevice_lib.list_local_devices() 按照输出结果来看，其实Colab只有一个CPU和一块Tesla K80的GPU，但这对我们开始足够了。 查看RAM和CPU信息： 12!cat /proc/meminfo!cat /proc/cpuinfo 在colab环境中，我们挂载Google drive的位置是/content/drive/ 。colab中的notebook和py文件默认都是以/content/ 作为工作目录，如果我们要切换工作路径。需要执行一下命令手动切换工作目录，例如： 1234import ospath = \"/content/drive/path/to/file(s)\"os.chdir(path)os.list(path) 遍历目录 12345# 列出根目录的所有文件# \"q\" 查询条件教程详见：https://developers.google.com/drive/v2/web/search-parametersfile_list = drive.ListFile(&#123;'q': \"'root' in parents and trashed=false\"&#125;).GetList()for file1 in file_list: print('title: %s, id: %s, mimeType: %s' % (file1['title'], file1['id'], file1[\"mimeType\"])) 我们看到的控制台打印结果中，其中的id是我们获取文件的唯一标识。 读取文件内容 123456789101112131415#for .txt filefile = drive.CreateFile(&#123;'id': \"替换成你的 .txt 文件 id\"&#125;) file.GetContentString()#for .csv file#GetContentString()只能打印第一行数据file = drive.CreateFile(&#123;'id': \"替换成你的 .csv 文件 id\"&#125;) #这里的下载操作只是缓存，不会在你的Google Drive 目录下多下载一个文件file.GetContentFile('iris.csv', \"text/csv\") # 直接打印文件内容with open('iris.csv') as f: print f.readlines()# 用 pandas 读取import pandaspd.read_csv('iris.csv', index_col=[0,1], skipinitialspace=True) Colab 会直接以表格的形式输出结果 写文件操作 12345# 创建一个文本文件uploaded = drive.CreateFile(&#123;'title': '示例.txt'&#125;)uploaded.SetContentString('测试内容')uploaded.Upload()print('创建后文件 id 为 &#123;&#125;'.format(uploaded.get('id'))) 下载文件到本地 123with open('example.txt', 'w') as f: f.write('测试内容')files.download('example.txt') 至此，所有的介绍完毕，请开始你的机器学习吧，事不宜迟，赶快动手试试看。至于实战什么的，试着试着就知道咯，欢迎入坑！ 参考文章链接https://zhuanlan.zhihu.com/p/33344222 https://segmentfault.com/a/1190000012731724","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.zhumark.cn/categories/Machine-Learning/"}],"tags":[{"name":"Google","slug":"Google","permalink":"http://www.zhumark.cn/tags/Google/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.zhumark.cn/tags/Machine-Learning/"}]}]}